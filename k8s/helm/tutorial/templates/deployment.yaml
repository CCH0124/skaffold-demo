apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tutorial.fullname" . }}
  labels:
    {{- include "tutorial.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tutorial.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tutorial.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tutorial.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- if .Values.extraInitContainers }}
        {{ toYaml .Values.extraInitContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $key, $value := .Values.containerPort }}
            - containerPort: {{ $value }}
              protocol: TCP
              name: {{ $key }}
          {{- end }}
          livenessProbe: {{ toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe: {{ toYaml .Values.readinessProbe | nindent 12 }}
          {{- with .Values.affinity }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: JAVA_TOOL_OPTIONS
            value: "-Dspring.config.location=/opt/config/application.properties"
          - name: DB_URL
            valueFrom:
              configMapKeyRef:
                key: DB_URL
                name: {{ include "tutorial.fullname" . }}-global
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: {{ include "tutorial.fullname" . }}-global-secret
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: {{ include "tutorial.fullname" . }}-global-secret
          volumeMounts:
          - name: application-config
            mountPath: /opt/config
            readOnly: true
      restartPolicy: Always
      volumes:
        - name: application-config
          configMap:
            name: {{ include "tutorial.fullname" . }}
            items:
            - key: application.properties 
              path: application.properties
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
