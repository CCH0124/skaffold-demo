{{- if .Values.service.enabled -}}
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- range $key, $value := .Values.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  name: {{ include "tutorial.fullname" . }}
  labels:
    {{- include "tutorial.labels" . | nindent 4 }}
  {{- if .Values.service.labels }}
    {{- toYaml .Values.service.labels | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.service.type }}
{{- if .Values.service.externalIPs }}
  externalIPs: {{ toYaml .Values.controller.service.externalIPs | nindent 4 }}
{{- end }}
{{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.controller.service.loadBalancerIP }}
{{- end }}
{{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: {{ toYaml .Values.service.loadBalancerSourceRanges | nindent 4 }}
{{- end }}
  ports:
  {{- $setNodePorts := (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) }}
  {{- if .Values.service.enableHttp }}
    - port: {{ .Values.service.ports.http }}
      targetPort: {{ .Values.service.targetPorts.http }}
      protocol: TCP
      name: http
    {{- if (and $setNodePorts (not (empty .Values.service.nodePorts.http))) }}
      nodePort: {{ .Values.service.nodePorts.http }}
    {{- end }}
  {{- end }}
  {{- if .Values.service.enableHttps }}
    - port: {{ .Values.service.ports.https }}
      targetPort: {{ .Values.service.targetPorts.https }}
      protocol: TCP
      name: https
    {{- if (and $setNodePorts (not (empty .Values.service.nodePorts.https))) }}
      nodePort: {{ .Values.service.nodePorts.https }}
    {{- end }}
  {{- end }}
  {{- end }}
  selector:
    {{- include "tutorial.selectorLabels" . | nindent 4 }}
{{- end }}