# Default values for tutorial.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cch0124/spring-tutorial-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

strategy: {}

extraInitContainers: []

ports:
  containerPort: {"http": "8080"}

livenessProbe: 
  httpGet:
    path: "/actuator/health/liveness"
    port: 8080
    scheme: "HTTP"
  initialDelaySeconds: 60
  timeoutSeconds: 3
  failureThreshold: 5
  periodSeconds: 20

readinessProbe: 
  httpGet:
    path: "/actuator/health/readiness"
    port: 8080
    scheme: "HTTP"
  initialDelaySeconds: 60
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 3

lifecycle:
  preStop: # 容器終止之前發送的事件
    exec:
      command: ["sh", "-c", "sleep 10"]



service:
  enabled: true
  labels: {}
  annotations: {}
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  enableHttp: true
  enableHttps: false
  # ipFamilyPolicy: "SingleStack"
  # ipFamilies:
  #   - IPv4
  ports:
    http: 80
    https: 443
  targetPorts:
    http: 8080
    https: https
  type: ClusterIP
  nodePorts:
    http: ""
    https: ""

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

configAnnotations: {}
# application:
#   config: 
#     health:
#       livenessstate:
#         enabled: true
#       readinessstate:
#         enabled: true
#       probes:
#         enabled: true

postgresql:
  url: "mypostgres.default.svc.cluster.local:5432"
  user: "dev"
  password: "MTIzNDU2Nzg5MA=="